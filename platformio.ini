; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[platformio]
default_envs = ATmega328P

[env]
platform = atmelavr
framework = arduino

build_flags =
  -Os ; optimize for size
  -funsigned-char
  -funsigned-bitfields
  -fpack-struct
  -fshort-enums
  -fno-exceptions
  -fno-jump-tables
  -mrelax
  -Wl,--relax
  -Wl,--cref
  -Wl,-Map=$BUILD_DIR/firmware.map

board_build.f_cpu = 16000000L

upload_protocol = custom

upload_flags =
    -p
    m328p
    -c
    usbasp
upload_command = avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i



[env:ATmega32]
board = ATmega32
build_flags =
  ${env.build_flags}
  -Wl,--section-start=.text=0x7000 ; 2048 words bootloader, 0x3800 * 2

;board_fuses.lfuse = 0x3F
;board_fuses.hfuse = 0xD8

[env:ATmega32U4]
board = micro ; there is no atmega32u4 board in platformio but arduino micro should be fine
board_build.mcu = atmega32u4
build_flags =
  ${env.build_flags}
  -Wl,--section-start=.text=0x7000 ; 2048 words bootloader, 0x3800 * 2

;board_fuses.lfuse = 0xFF
;board_fuses.hfuse = 0xD8
;board_fuses.efuse = 0xFC

[env:ATmega328P]
board = ATmega328P
build_flags =
  ${env.build_flags}
  -Wl,--section-start=.text=0x7000 ; 2048 words bootloader, 0x3800 * 2
upload_flags =
    -pm328p
    -cusbasp
    -Ulfuse:w:0xff:m
    -Uhfuse:w:0xd8:m
    -Uefuse:w:0xfc:m

;board_fuses.lfuse = 0xFF
;board_fuses.hfuse = 0xD8
;board_fuses.efuse = 0xFC

[env:ATmega328PB]
board = ATmega328PB
build_flags =
  ${env.build_flags}
  -Wl,--section-start=.text=0x7000 ; 2048 words bootloader, 0x3800 * 2
upload_flags =
    -pm328pb
    -cusbasp
    -Ulfuse:w:0xff:m
    -Uhfuse:w:0xd8:m
    -Uefuse:w:0xfc:m

;board_fuses.lfuse = 0xFF
;board_fuses.hfuse = 0xD8
;board_fuses.efuse = 0xFC

[env:ATmega64]
board = ATmega64
build_flags =
  ${env.build_flags}
  -Wl,--section-start=.text=0xF000 ; 2048 words bootloader, 0x7800 * 2

;board_fuses.lfuse = 0x3F
;board_fuses.hfuse = 0xDA
;board_fuses.efuse = 0xFF


[env:ATmega644P]
board = ATmega644P
build_flags =
  ${env.build_flags}
  -Wl,--section-start=.text=0xF000 ; 2048 words bootloader, 0x7800 * 2

;board_fuses.lfuse = 0xFF
;board_fuses.hfuse = 0xDA
;board_fuses.efuse = 0xFC


[env:ATmega128]
board = ATmega128
build_flags =
  ${env.build_flags}
  -Wl,--section-start=.text=0x01F000 ; 2048 words bootloader, 0xF800 * 2

;board_fuses.lfuse = 0x3F
;board_fuses.hfuse = 0xDA
;board_fuses.efuse = 0xFF


[env:ATmega1284P]
board = ATmega1284P
build_flags =
  ${env.build_flags}
  -Wl,--section-start=.text=0x01F000 ; 2048 words bootloader, 0xF800 * 2

;board_fuses.lfuse = 0xFF
;board_fuses.hfuse = 0xDA
;board_fuses.efuse = 0xFC


[env:ATmega2560]
board = ATmega2560
build_flags =
  ${env.build_flags}
  -Wl,--section-start=.text=0x03F000 ; 2048 words bootloader, 0x1F800 * 2

;board_fuses.lfuse = 0xFF
;board_fuses.hfuse = 0xDA
;board_fuses.efuse = 0xFC

; ***
; Additional environments as examples below
; ***

; ATmega328P with AVR ISP MK2
[env:ATmega328P_via_AVRISP_mkII]
board = ATmega328P
build_flags =
  ${env.build_flags}
  -Wl,--section-start=.text=0x7000 ; 2048 words bootloader, 0x3800 * 2

board_build.f_cpu = 16000000L

board_fuses.lfuse = 0xFF
board_fuses.hfuse = 0xD8
board_fuses.efuse = 0xFC

upload_protocol = custom
upload_port = usb
upload_flags =
  -C
  ; use "tool-avrdude-megaavr" for the atmelmegaavr platform
  ${platformio.packages_dir}/tool-avrdude/avrdude.conf
  -p
  $BOARD_MCU
  -P
  $UPLOAD_PORT
  -c
  stk500v2 ; avrispmkII
upload_command = avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i
